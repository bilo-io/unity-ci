name: BUILD

on:
  pull_request: { branches: [master] }
  push: { branches: [master] }

# CONFIGURATION
# For help, go to https://github.com/Azure/Actions
#
# 1. Set up the following secrets in your repository:
#   AZURE_WEBAPP_PUBLISH_PROFILE
#
# 2. Change these variables for your configuration:
env:
  AZURE_WEBAPP_NAME: unity-ci    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '10.x'                # set this to the node version to use
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  build_unity:
    name: Unity ${{ matrix.targetPlatform }} v ${{ matrix.unityVersion }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - .
        unityVersion:
          - 2019.4.2f1
        targetPlatform:
          # - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          # - StandaloneWindows # Build a Windows standalone.
          # - StandaloneWindows64 # Build a Windows 64-bit standalone.
          # - StandaloneLinux64 # Build a Linux 64-bit standalone.
          # - Android # Build an Android .apk standalone app.
          - iOS # Build an iOS player.
          - WebGL # WebGL.
          # - WSAPlayer # Build an Windows Store Apps player.
          # - PS4 # Build a PS4 Standalone.
          # - XboxOne # Build a Xbox One Standalone.
          # - tvOS # Build to Apple's tvOS platform.
          # - Switch # Build a Nintendo Switch player.
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - uses: actions/cache@v1.1.0
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-
            Library-
      - uses: webbertakken/unity-builder@v1.2
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
      - uses: actions/upload-artifact@v1
        with:
          name: Build
          path: build

  deploy_server:
    runs-on: ubuntu-latest
    needs: [build_unity]
    name: Build Server and Deploy
    steps:
      - name: 'Show contents'
        run: ls -la
      - name: 'Create Node.js Server'
        run: bash ./scripts/setup-server.sh
        # if: contains(github.ref, "release")
      - name: 'Deploy to Azure WebApp'
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
